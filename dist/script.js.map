{"version":3,"sources":["script.js"],"names":["toggle_RadioBtns","document","querySelectorAll","body","querySelector","dark_RadioBtn","pref_ColoredScheme","window","matchMedia","getColorMode","localStorage","getItem","set_ColorMode","mode","setItem","classList","add","remove","dark_RadioBtn_Active","checked","light_RadioBtn_Active","colorScheme_onChangeHandler","_ref","matches","colorMode","addEventListener","forEach","btn","removeEventListener"],"mappings":"AAAA,aAAA,IAAMA,iBAAmBC,SAASC,iBAAiB,0BAC7CC,KAAOF,SAASG,cAAc,QAC9BC,cAAgBJ,SAASG,cAAc,SACzCE,mBAAqBC,OAAOC,WAAW,gCAG3C,SAASC,eACR,OAAOC,aAAaC,QAAQ,YAC7B,CACA,SAASC,cAAcC,GACtBH,aAAaI,QAAQ,YAAaD,GACvB,QAARA,GACFV,KAAKY,UAAUC,IAAI,aACnBb,KAAKY,UAAUE,OAAO,gBAEtBd,KAAKY,UAAUE,OAAO,aACtBd,KAAKY,UAAUC,IAAI,cAErB,CACA,SAASE,uBACRlB,iBAAiB,GAAGmB,SAAU,CAC/B,CACA,SAASC,wBACRpB,iBAAiB,GAAGmB,SAAU,CAC/B,CAEA,SAASE,4BAA2BC,GAAUA,EAAPC,QAC3BL,uBAAyBE,uBACrC,CAGA,IAAII,UAAYf,eACA,QAAbe,WACFrB,KAAKY,UAAUC,IAAI,aACnBE,wBACsB,SAAbM,WACTrB,KAAKY,UAAUC,IAAI,cACnBI,0BAKGd,mBAAmBiB,QACrBL,uBAEAE,wBAGDd,mBAAmBmB,iBAAiB,SAAUJ,8BAE/CrB,iBAAiB0B,SAAQ,SAAAC,GACxBA,EAAIF,iBAAiB,SAAS,WAC7BnB,mBACGsB,oBAAoB,SAAUP,6BAC9BhB,cAAcc,QAChBP,cAAc,QAEdA,cAAc,QAEhB,GACD","file":"script.js","sourcesContent":["const toggle_RadioBtns = document.querySelectorAll(\".toggle__wrapper input\");\r\nconst body = document.querySelector(\"body\");\r\nconst dark_RadioBtn = document.querySelector(\"#dark\");\r\nlet pref_ColoredScheme = window.matchMedia('(prefers-color-scheme: dark)');\r\n\r\n// Toggle Switch Utilities Functions\r\nfunction getColorMode() {\r\n\treturn localStorage.getItem(\"colorMode\");\r\n}\r\nfunction set_ColorMode(mode) {\r\n\tlocalStorage.setItem(\"colorMode\", mode);\r\n\tif(mode == \"dark\") {\r\n\t\tbody.classList.add(\"dark-mode\");\r\n\t\tbody.classList.remove(\"light-mode\");\r\n\t} else {\r\n\t\tbody.classList.remove(\"dark-mode\");\r\n\t\tbody.classList.add(\"light-mode\");\r\n\t}\r\n}\r\nfunction dark_RadioBtn_Active() {\r\n\ttoggle_RadioBtns[0].checked = true;\r\n}\r\nfunction light_RadioBtn_Active() {\r\n\ttoggle_RadioBtns[1].checked = true;\r\n}\r\n\r\nfunction colorScheme_onChangeHandler({ matches }) {\r\n  matches ? dark_RadioBtn_Active() : light_RadioBtn_Active();\r\n}\r\n\r\n// Toggle Switch Logic\r\nlet colorMode = getColorMode();\r\nif(colorMode == \"dark\") {\r\n\tbody.classList.add(\"dark-mode\");\r\n\tdark_RadioBtn_Active();\r\n} else if(colorMode == \"light\") {\r\n\tbody.classList.add(\"light-mode\");\r\n\tlight_RadioBtn_Active();\r\n} else {\r\n\t// Nothing is set by user beforehand\r\n\t// So, will display according to system pref -> OK! Nice.\r\n\t// But need to adjust the toggle__Button\r\n\tif(pref_ColoredScheme.matches) {\r\n\t\tdark_RadioBtn_Active();\r\n\t} else {\r\n\t\tlight_RadioBtn_Active();\r\n\t}\r\n\t// Adding an event listener only if user changes color scheme at the start itself\r\n\tpref_ColoredScheme.addEventListener('change', colorScheme_onChangeHandler);\r\n}\r\ntoggle_RadioBtns.forEach(btn => {\r\n\tbtn.addEventListener(\"click\", () => {\r\n\t\tpref_ColoredScheme\r\n    .removeEventListener('change', colorScheme_onChangeHandler);\r\n\t\tif(dark_RadioBtn.checked) {\r\n\t\t\tset_ColorMode(\"dark\");\r\n\t\t} else {\r\n\t\t\tset_ColorMode(\"light\");\r\n\t\t}\r\n\t});\r\n})\r\n\r\n"]}